services:
  traefik:
    image: traefik:v3.2
    hostname: '{{.Node.Hostname}}'
    ports:
      # listen on host ports without ingress network
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 443
        published: 443
        protocol: tcp
        mode: host
    networks:
      - traefik-public
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /mnt/docker-storage/traefik:/etc/traefik
    command:
      - --api.dashboard=true
      - --log.level=DEBUG
      #- --log.filepath=/var/log/traefik.log
      - --accesslog=true
      #- --accesslog.filepath=/var/log/traefik-access.log
      - --providers.swarm.exposedByDefault=true
      - --providers.swarm.network=traefik-public
      - "--providers.file.directory=/etc/traefik"
      - "--providers.file.watch=true"
      - --entrypoints.web.address=:80

    environment:
      - AUTODNS_API_USER=12345678
      - AUTODNS_API_PASSWORD=12345678
      - AUTODNS_CONTEXT=1234
    deploy:
      mode: global
      placement:
        constraints:
          - node.hostname == node1
      labels:
        - traefik.enable=true
        - traefik.http.routers.mydashboard.rule=Host(`traefik`)
        - traefik.http.routers.mydashboard.service=api@internal
        - traefik.http.services.mydashboard.loadbalancer.server.port=1337
        - homepage.group=System Tools
        - homepage.name=Traefik
        - homepage.icon=traefik.png
        - homepage.href=http://traefik/
        - homepage.description= proxy

  whoami:
    image: traefik/whoami:v1.10
    hostname: '{{.Node.Hostname}}'
    networks:
      - traefik-public
    deploy:
      mode: global
      labels:
        - traefik.enable=true
        - traefik.http.routers.whoami.rule=Host(`whoami`)
        - traefik.http.services.whoami.loadbalancer.server.port=80

networks:
 traefik-public:
  external: true
