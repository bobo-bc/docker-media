version: '3'

services:
  traefik:
    image: traefik:v3.1
    hostname: '{{.Node.Hostname}}'
    ports:
      # listen on host ports without ingress network
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 443
        published: 443
        protocol: tcp
        mode: host
    networks:
      - traefik-public
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /mnt/docker-storage/traefik/certs:/certificates
    command:
      - --api.dashboard=true
      - --log.level=INFO
      - --accesslog=true
      - --providers.swarm.exposedByDefault=false
      - --providers.swarm.network=traefik-public
      - --entrypoints.web.address=:80
      - --providers.swarm.exposedByDefault=false
      - --providers.swarm.network=proxy
      - --entrypoints.web.address=:80
      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --entryPoints.web.http.redirections.entrypoint.scheme=https
      - --entrypoints.websecure.address=:443
      - --entrypoints.websecure.asDefault=true
      - --entrypoints.websecure.http.tls.certresolver=myresolver
      - --certificatesresolvers.myresolver.acme.email=stevenfmeyer@me.com
      - --certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json
      - --certificatesresolvers.myresolver.acme.tlschallenge=true
    deploy:
      mode: global
      placement:
        constraints:
          - node.role==manager
      environment:
      # vars depend on your DNS provider
        - CF_API_EMAIL=${CF_API_EMAIL}
        - CF_DNS_API_TOKEN=${CF_DNS_API_TOKEN}
      labels:
        - traefik.enable=true
        - traefik.http.routers.mydashboard.rule=Host(`traefik,traefik.stevenfmeyer.me`)
        - traefik.http.routers.mydashboard.service=api@internal
        - traefik.http.services.mydashboard.loadbalancer.server.port=1337
        - homepage.group=Servarr
        - homepage.name=Traefik
        - homepage.icon=traefik.png
        - homepage.href=http://traefik/
        - homepage.description= proxy

  whoami:
    image: traefik/whoami:v1.10
    hostname: '{{.Node.Hostname}}'
    networks:
      - traefik-public
    deploy:
      mode: global
      labels:
        - traefik.enable=true
        - traefik.http.routers.whoami.rule=Host(`whoami`)
        - traefik.http.services.whoami.loadbalancer.server.port=80

networks:
  traefik-public:
    external: true
volumes:
  letsencrypt:
    name: letsencrypt

