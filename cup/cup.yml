version: "3.8"

services:

##### define the service #####
  cup:
    image: ghcr.io/sergi0g/cup:latest

#### define deployment critieria ####    
    deploy:
#      mode: replicated
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
  #      failure_action: rollback
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3

     #### contain the resources ####       
      resources:
        limits:
          cpus: "0.50"
          memory: "512M"
        reservations:
          cpus: "0.25"
          memory: "128M"
      labels:
       # traefik labels for simple internal reverse proxy
        - traefik.enable=true
        - traefik.http.routers.cup.rule=Host(`cup`)
        - traefik.http.services.cup.loadbalancer.server.port=8000
        - traefik.http.routers.cup.entrypoints=web
      # Homepage labels for Cup
        - homepage.group=Utilities
        - homepage.name=Cup
        - homepage.icon=https://cdn3.iconfinder.com/data/icons/kitchen-45/512/neonsign_kitchen06-1024.png
        - homepage.href=http://10.0.0.20:8001
        - homepage.description=Checks for container updates

#### command to run the service #####
    command: serve

#### reassign an unused port #####    
    ports:
      - "8001:8000"

#### allow a read of docker so for auto discovery, and cup.json to store data ####
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro # Read-only for better security
      - /mnt/docker-storage/cup/cup.json:/config/cup.json

#### define traefik network to DNS resolve #####      
    networks:
      - traefik-public

#### using root to get it running internally for now, will investigate and update later ####      
    user: "0:0" # Use a non-root user for improved security

networks:
  traefik-public:
















