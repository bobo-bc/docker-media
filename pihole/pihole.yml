version: "3.9" # Specifies the Docker Compose file format.

services:

  ##### Define the Pi-hole DNS Filtering Service #####
  pihole:
    image: pihole/pihole # Uses the official Pi-hole image to provide network-wide ad-blocking.

    ##### Deployment Configuration #####
    deploy:
      replicas: 1 # Runs a single instance—adjust for high availability if needed.
      placement:
        constraints: [node.hostname == node2] # Ensures service runs specifically on node2.

      ##### Resource Allocation #####
      resources:
        reservations:
          memory: 128M # Guarantees 128MB of RAM is available for stable performance.
        limits:
          memory: 256M # Restricts memory usage to 256MB to prevent excessive consumption.

      ##### Service Labels #####
      labels:
        # Traefik Reverse Proxy Labels
        - 'traefik.enable=true' # Enables Traefik for routing requests efficiently.
        - 'traefik.http.routers.pihole.rule=Host(`pihole`)' # Defines hostname routing within the network.
        - 'traefik.http.services.pihole.loadbalancer.server.port=85' # Specifies the internal service port.
        - 'traefik.http.routers.pihole.entrypoints=web' # Uses HTTP entrypoint—consider HTTPS for security.
        # Homepage dashboard integration for visibility and organization
        - homepage.group=System Tools # Groups Pi-hole under "System Tools" for easier navigation.
        - homepage.name=Pi-hole # Sets display name in the dashboard.
        - homepage.icon=pi-hole.png # Assigns a recognizable icon for quick identification.
        - homepage.href=http://10.0.0.20:85/admin # Provides direct access to the admin interface.
        - homepage.description=DNS server # Brief description of Pi-hole’s functionality.
        - "shepherd.watch=true"

    ##### Port Mapping #####
    ports:
      - "53:53/tcp" # Maps DNS port (TCP) for external DNS queries.
      - "53:53/udp" # Maps DNS port (UDP) to handle fast query requests.
      - "85:80/tcp" # Maps HTTP port for the Pi-hole web admin interface.

    ##### Environment Variables #####
    environment:
      TZ: 'America/Vancouver' # Sets timezone for consistent logging and scheduling.
      WEBPASSWORD: 'Hurts2p33' # Defines the administrator password for Pi-hole’s web interface.
      FTL_CMD: 'debug' # Enables debugging mode—useful for troubleshooting.
      DNSMASQ_LISTENING: 'all' # Ensures Pi-hole listens on all interfaces for DNS queries.

    ##### Persistent Storage Configuration #####
    volumes:
      - pihole-config:/etc/pihole/ # Stores configuration and DNS blocklists persistently.
      - dnsmasq_config:/etc/dnsmasq.d/ # Stores DNS resolver settings.

    ##### DNS Configuration #####
    dns:
      - 127.0.0.1 # Forces Pi-hole to use itself as the primary DNS resolver.
      - 1.1.1.1 # Uses cloudflare for secure DNS resolution

    ##### Network Configuration #####
    networks:
      - pihole # Defines an isolated network for DNS filtering.
      - traefik-public # Connects Pi-hole to the shared Traefik reverse proxy network.
volumes:
  pihole_config:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /mnt/docker-storage/pihole/pihole-data
  dnsmasq_config:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /mnt/docker-storage/pihole/pihole-dnsmasq

##### Network Definitions #####
networks:
  pihole: # Isolated network for Pi-hole’s internal processes.
  traefik-public:
    external: true # Uses an externally created Traefik network for reverse proxy integration.
