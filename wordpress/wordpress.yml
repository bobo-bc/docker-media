version: "3.8" # Defines the Docker Compose file format.

services:

  ##### Define the MySQL Database Service #####
  mysql:
    image: mysql:latest # Uses the latest MySQL image—consider pinning to a stable version.

    ##### Network Configuration #####
    networks:
      - backend-ntwk # Connects MySQL to a private backend network for secure communication.

    ##### Persistent Storage Configuration #####
    volumes:
      - ${config}/word/sql-data1:/var/lib/mysql # Stores MySQL database data persistently.

    ##### Database Authentication & Security #####
    environment:
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/db_root_password # Securely retrieves root password from Docker secrets.
      MYSQL_DATABASE: wordpress # Defines the primary database name.
      MYSQL_USER: wordpress # Creates a dedicated user for the WordPress database.
      MYSQL_PASSWORD: /run/secrets/db_password # Securely retrieves user password from Docker secrets.

    ##### Secret Management #####
    secrets:
      - db_root_password # References externally stored root password secret.
      - db_password # References externally stored user password secret.

    ##### Deployment Configuration #####
    deploy:
      replicas: 1 # Runs a single MySQL instance—scale as needed.
      restart_policy:
        condition: on-failure # Ensures service restarts only upon failure.

  ##### Define the WordPress Web Server #####
  wordpress:
    image: wordpress:latest # Uses the latest WordPress image—consider pinning for stability.

    ##### Port Mapping #####
    ports:
      - "8081:80" # Maps container port 80 to host port 8081 for external access.

    ##### Network Configuration #####
    networks:
      - frontend-ntwk # Connects to an external network for web hosting.
      - backend-ntwk # Connects privately to MySQL for database access.

    ##### Persistent Storage Configuration #####
    volumes:
      - ${config}/word:/var/www/html # Stores WordPress site files persistently.

    ##### Database Connection Configuration #####
    environment:
      WORDPRESS_DB_HOST: mysql:3306 # Specifies the MySQL database hostname and port.
      WORDPRESS_DB_USER: wordpress # Uses the dedicated database user.
      WORDPRESS_DB_PASSWORD: /run/secrets/db_password # Securely retrieves password from Docker secrets.
      WORDPRESS_DB_NAME: wordpress # Defines the primary database name.

    ##### Secret Management #####
    secrets:
      - db_password # References externally stored user password secret.

    ##### Deployment Configuration #####
    deploy:
      labels:
        - homepage.group=Productivity # Groups WordPress under "Productivity" in the dashboard.
        - homepage.name=WordPress # Sets display name for easy identification.
        - homepage.icon=wordpress.png # Assigns a recognizable icon.
        - homepage.href=https://stevenfmeyer.me # Provides direct access via dashboard.
        - homepage.description=My personal blog # Short description for dashboard entry.
        - com.centurylinklabs.watchtower.enable="false" # Disables automated updates via Watchtower.

      replicas: 1 # Runs a single WordPress instance—scale for redundancy.
      restart_policy:
        condition: on-failure # Ensures service restarts only upon failure.

    ##### Service Dependencies #####
    depends_on:
      - mysql # Ensures MySQL starts before WordPress.

##### Define External Secret Storage #####
secrets:
  db_password:
    external: true # Retrieves the database password from an external secret manager.
  db_root_password:
    external: true # Retrieves the root password from an external secret manager.

##### Persistent Storage Definitions #####
volumes:
  sql-data: # Defines persistent storage for MySQL database.

##### Network Configuration #####
networks:
  backend-ntwk:
    external: false # Private backend network for database communication.
  frontend-ntwk:
    external: true # External frontend network for web hosting.
